version: "3.8"

services:
  api:
    image: meduzzen-backend-api
    container_name: django
    entrypoint: ./start.sh
    tty: true
    stdin_open: true
    volumes:
      - .:/code
      - ./code:/apps
    ports:
      - "8000:8000"
    depends_on:
      - postgres-db
      - redis
    env_file:
      - .env
    networks:
      - api-db-redis

  celery:
    image: meduzzen-backend-api
    container_name: celery
    command: celery -A meduzzen_backend worker -l INFO
    volumes:
      - .:/code
      - ./code:/apps
    depends_on:
      - postgres-db
      - redis
    env_file:
      - .env
    networks:
      - api-db-redis

  celery-beat:
    image: meduzzen-backend-api
    container_name: celery-beat
    command: celery -A meduzzen_backend beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
      - ./code:/apps
    depends_on:
      - postgres-db
      - redis
    env_file:
      - .env
    networks:
      - api-db-redis

  flower:
    image: mher/flower:latest
    container_name: flower
    command: celery --broker=redis://redis_cache:6379/0 flower
    ports:
      - 5555:5555
    env_file:
      - .env
    depends_on:
      - celery
      - celery-beat
      - redis
    networks:
      - api-db-redis

  postgres-db:
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      api-db-redis:
        # Have access the database using pgadmin4
        ipv4_address: 172.24.0.6

  pg-admin:
    image: dpage/pgadmin4:latest
    container_name: pg_admin
    env_file:
      - .env
    ports:
      - "5050:5050"
    networks:
      - api-db-redis

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - api-db-redis

volumes:
  data:

networks:
  api-db-redis:
    ipam:
      driver: default
      config:
        - subnet: 172.24.0.0/24
